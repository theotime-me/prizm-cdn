{"packages": {
	"ajax": {
		"desc": "Use the XmlHttpRequest technology to get a file from its URL.",
		"examples": ["ajax({url: string, async: boolean, success: function, error: function, progress: function, parse: boolean})"],
		"keywords": ["xhr", "fetch", "get", "post"],
		"size": 1.02
	},

	"date": {
		"desc": "A simplified function to know the date, year, months, days, hours, minutes, etc.",
		"examples": ["date(request: string, addZero: boolean)"],
		"keywords": ["month", "day", "year", "hour", "minute", "second"],
		"size": 0.921
	},

	"scrolltop": {
		"desc": "A very simple package which scroll to the top of the page when it's called.",
		"examples": ["scrolltop()"],
		"keywords": ["page", "scroll", "top"],
		"size": 0.220
	},

	"cookies": {
		"desc": "Add two function, to setCookie() and getCookie() in Javascript. Usefull and so simple to use !",
		"examples": ["getCookie(name: string)", "setCookie(name: string, value:string|number, days:number)"],
		"keywords": ["cookie", "set", "get", "save", "navigator"],
		"size": 0.744
	},

	"os": {
		"desc": "Know the OS (Operating System) of any user. Windows, MacOS, UNIX or Linux will be returned.",
		"examples": ["os(name: string)"],
		"keywords": ["system", "computer", "operating"],
		"size": 0.406
	},

	"browser": {
		"desc": "Detect the browser and return it (Firefox, Opera, Safari, IE, Edge, etc.).",
		"examples": ["browser(name: string)"],
		"keywords": ["navigator", "detect"],
		"size": 0.688
	},

	"history": {
		"desc": "Move into the history with \"back\" and \"forward\", or using a number (-3, 1, etc.).",
		"examples": ["history(name: string)"],
		"keywords": ["back", "prev", "next", "previous", "browse"],
		"size": 0.468
	},

	"isMobile": {
		"desc": "Return true if the used device is a mobile.",
		"examples": ["isMobile()"],
		"keywords": ["phone", "responsive", "mobile"],
		"size": 0.288
	},

	"lang": {
		"desc": "Return the language used (fr-fr) or test it.",
		"examples": ["isMobile(lang: string)"],
		"keywords": ["language", "translate", "speak", "speaking"],
		"size": 0.233
	},

	"popup": {
		"desc": "Show a popup of any website which allow this.",
		"examples": ["popup(url: string, title: string, height: number, width: number)"],
		"keywords": ["url", "show", "window"],
		"size": 0.363
	},

	"print": {
		"desc": "Ask the user about print the page.",
		"examples": ["print()"],
		"keywords": ["page"],
		"size": 0.157
	},

	"screen": {
		"desc": "Get info about the screen width and height.",
		"examples": ["screen(value: \"height\" OR \"width\")"],
		"keywords": ["width", "height", "page"],
		"size": 0.245
	},

	"title": {
		"desc": "Get or set the current title of the page.",
		"examples": ["title(newTitle: string)"],
		"keywords": ["tab"],
		"size": 0.249
	},

	"get": {
		"desc": "Get url parameters after the \"?\".",
		"examples": ["url(param: string)"],
		"keywords": ["get", "param", "url"],
		"size": 0.340
	},

	"url": {
		"desc": "Set or get the current url to a new destination.",
		"examples": ["url(target: string)"],
		"keywords": ["set", "target", "link"],
		"size": 0.261
	},

	"getScript": {
		"desc": "Get a javascript or css script from an url and execute it.",
		"examples": ["getScript(url: string, cb: function)"],
		"dependencies": ["ajax"],
		"keywords": ["get", "script", "eval", "download", "fetch"],
		"size": 0.233
	},

	"getJSON": {
		"desc": "Get a JSON file from an url and return it in a callback. Usefull to get results of APIs !",
		"examples": ["getJSON(url: string, cb: function)"],
		"dependencies": ["ajax"],
		"keywords": ["get", "json", "data", "api", "fetch"],
		"size": 0.487
	}
},

"core": {
	"html": {
		"examples": ["html(html: string)"],
		"keywords": ["html", "innerhtml", "fill", "text"],
		"desc": "Fill all matched nodes with a string."
	},

	"append": {
		"examples": ["append(html: string)"],
		"keywords": ["html", "innerhtml", "fill", "text", "after"],
		"desc": "Append html string to all matched nodes."
	},

	"prepend": {
		"examples": ["prepend(callback: function)"],
		"keywords": ["html", "innerhtml", "fill", "text", "before"],
		"desc": "Loop into all matched nodes and call a function for each."
	},

	"each": {
		"examples": ["each(callback: function)"],
		"keywords": ["loop", "foreach", "for"],
		"desc": "Loop into all matched nodes and call a function for each."
	},

	"first": {
		"examples": ["first(callback: function)"],
		"keywords": ["node"],
		"desc": "return the first node or call a function with the first node."
	},

	"last": {
		"examples": ["last(callback: function)"],
		"keywords": ["node"],
		"desc": "return the last node or call a function with the last node."
	},

	"prop": {
		"examples": ["prop(prop: string, value: string|number)"],
		"keywords": ["property", "get", "set"],
		"desc": "Set or get a property of any element."
	},

	"addClass": {
		"examples": ["addClass(className: string|array)"],
		"keywords": ["add", "class", "classname"],
		"desc": "Adds class to all matching nodes."
	},

	"removeClass": {
		"examples": ["removeClass(className: string|array)"],
		"keywords": ["remove", "class", "classname"],
		"desc": "Removes class to all matching nodes."
	},

	"toggleClass": {
		"examples": ["toggleClass(className: string|array)"],
		"keywords": ["toggle", "class", "classname"],
		"desc": "Toggles class to all matching nodes."
	},

	"hasClass": {
		"examples": ["hasClass(className: string)"],
		"keywords": ["has", "class", "classname"],
		"desc": "Returns \"true\" if the first node has the specify class"
	},

	"remove": {
		"examples": ["remove()"],
		"keywords": ["remove", "node", "element"],
		"desc": "Removes all matched nodes."
	},

	"removeAttr": {
		"examples": ["removeAttr(attr: string)"],
		"keywords": ["remove", "attr", "attribute"],
		"desc": "Removes an attribute to any element."
	},

	"attr": {
		"examples": ["attr(attr: string, value: string|number)"],
		"keywords": ["set", "add", "attr", "attribute"],
		"desc": "Set an attribute to any element."
	},

	"hide": {
		"examples": ["hide(duration: string|number)"],
		"keywords": ["opacity", "fade"],
		"desc": "Set an attribute to any element."
	},

	"show": {
		"examples": ["attr(attr: string, value: string|number)"],
		"keywords": ["set", "add", "attr", "attribute"],
		"desc": "Set an attribute to any element."
	}
}
}